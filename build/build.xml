<?xml version="1.0" encoding="UTF-8"?>

<project name="CodeShelfUX" default="" basedir="../">

	<taskdef resource="pyAntTasks.properties">
		<classpath>
			<pathelement location="${basedir}/build/lib/pyAntTasks-1.3.3.jar" />
		</classpath>
	</taskdef>

	<property name="src.dir" value="src" />

	<target name="lint">
		<exec command="/usr/local/bin/gjslint">
			<arg value="-r" />
			<arg value="src/js_uncompiled" />
			<arg value="--nojsdoc" />
		</exec>
	</target>

	<target name="generate.templates">
		<java jar="./lib/GoogleClosureTemplates/SoyToJsSrcCompiler.jar" fork="true" failonerror="true" maxmemory="128m">
			<arg value="--shouldProvideRequireSoyNamespaces" />
			<arg value="--outputPathFormat" />
			<arg value="./src/js_uncompiled/{INPUT_FILE_NAME_NO_EXT}_gen.js" />
			<arg value="./src/templates/codeshelf_templates.soy" />
		</java>
	</target>

	<target name="generate.css">
		<echo>${user.dir}</echo>
		<java jar="./lib/GoogleClosureStylesheets/closure-stylesheets-20111230.jar" fork="true" failonerror="true" maxmemory="128m">
			<arg value="--pretty-print" />
			<arg value="--output-file" />
			<arg value="./src/css/codeshelf_generated.css" />
			<arg value="./src/css/codeshelf.gss" />
		</java>
	</target>

	<target name="generate.deps">
		<echo>${basedir}</echo>
		<py-run script="./lib/GoogleClosureLibrary/closure/bin/build/depswriter.py" pythonpath="${basedir}" optimize="0">
			<arg value="--root_with_prefix=../lib/GoogleClosureLibrary ../../" />
			<arg value="--root_with_prefix=../lib/GoogleClosureTemplates ../../../GoogleClosureTemplates" />
			<arg value="--root_with_prefix=../lib/Arrowlets ../../../Arrowlets" />
			<arg value="--root_with_prefix=../lib/JQuery ../../../JQuery" />
			<arg value="--root_with_prefix=../lib/SlickGrid ../../../SlickGrid" />
			<arg value="--root_with_prefix=../lib/Raphael ../../../Raphael" />
			<arg value="--root_with_prefix=../src/js_uncompiled ../../../../src/js_uncompiled" />
			<arg value="--output_file=../src/js_compiled/deps.js" />
		</py-run>
	</target>

	<target name="compile">
		<echo>${basedir}</echo>
		<py-run script="./lib/GoogleClosureLibrary/closure/bin/build/closurebuilder.py" dir="${basedir}" optimize="0">
			<arg value="--root=./lib/GoogleClosureLibrary/closure/" />
			<arg value="--root=./lib/GoogleClosureLibrary/third_party/" />
			<arg value="--root=./lib/GoogleClosureTemplates/" />
			<arg value="--root=./lib/JQuery/" />
			<arg value="--root=./lib/SlickGrid/" />
			<arg value="--root=./lib/Raphael/" />
			<arg value="--root=./src/js_uncompiled" />
			<arg value="--namespace=codeshelf.application" />
			<arg value="--output_mode=compiled" />
			<arg value="--compiler_jar=./lib/GoogleClosureLibrary/compiler.jar" />
			<arg value="--compiler_flags=--compilation_level=ADVANCED_OPTIMIZATIONS" />
			<arg value="--compiler_flags=--create_source_map=./src/js_compiled/codeshelf.map" />
			<arg value="--compiler_flags=--output_manifest=./src/js_compiled/codeshelf.manifest" />
			<arg value="--compiler_flags=--property_map_output_file=./src/js_compiled/property.map" />
			<arg value="--compiler_flags=--variable_map_output_file=./src/js_compiled/variable.map" />
			<!--arg value="- -compiler_flags=- -create_name_map_files" /-->
			<!--arg value="- -compiler_flags=- -externs=./src/js_externs/codeshelf_externs.js" /-->
			<arg value="--compiler_flags=--externs=./src/js_externs/google_maps_api_v3_8.js" />
			<arg value="--compiler_flags=--externs=./src/js_externs/jquery-1.7.js" />
			<arg value="--compiler_flags=--externs=./src/js_externs/jquery-ui.1.8.19.js" />
			<arg value="--compiler_flags=--formatting=PRETTY_PRINT" />
			<arg value="--compiler_flags=--debug" />
			<!--arg value="- -compiler_flags=- -warning_level=VERBOSE" /-->
			<!--arg value="- -compiler_flags=- -output_wrapper &quot;(function(){%output%})();&quot;" /-->
			<arg value="--compiler_flags=--manage_closure_dependencies" />
			<arg value="--compiler_flags=--closure_entry_point=codeshelf.application" />
			<arg value="--compiler_flags=--jscomp_warning=missingProperties" />
			<arg value="--compiler_flags=--jscomp_warning=checkTypes" />
			<arg value="--compiler_flags=--logging_level=FINEST" />
			<arg value="--compiler_flags=--summary_detail_level=3" />
			<arg value="--output_file=./src/js_compiled/codeshelf.js" />
		</py-run>
		<replace file="./src/js_compiled/codeshelf.map" token="src/js_uncompiled" value="../js_uncompiled"/>
		<replace file="./src/js_compiled/codeshelf.map" token="lib/GoogleClosureLibrary" value="../../lib/GoogleClosureLibrary"/>
		<replace file="./src/js_compiled/codeshelf.map" token="lib/SlickGrid" value="../../lib/SlickGrid"/>
		<replace file="./src/js_compiled/codeshelf.map" token="lib/JQuery" value="../../lib/JQuery"/>
		<echo file="./src/js_compiled/codeshelf.js" append="true">
//@ sourceMappingURL=codeshelf.map</echo>
	</target>

	
	<!--	This almost works, except source maps do not have the right paths.
			The compiler option above works for now, but when we need modules it will be a lot easier to use Plovr.
			This patch can make this work right: http://codereview.appspot.com/6346071/
			but we don't need modules yet.  When we need modules revisit this to see if Plovr updated to include the listed patch. -->
	<target name="plovr.build">
		<echo>${basedir}</echo>
		<java jar="./build/plovr-4b3caf2b7d84.jar" fork="true" failonerror="true" maxmemory="128m">
			<arg value="build" />
			<arg value="./build/codeshelf.plovr.config" />
			<arg value="--create_source_map" />
			<arg value="./src/js_compiled/codeshelf.map" />
		</java>
		<echo file="./src/js_compiled/codeshelf.js" append="true">
//@ sourceMappingURL=codeshelf.map</echo>
	</target>
</project>